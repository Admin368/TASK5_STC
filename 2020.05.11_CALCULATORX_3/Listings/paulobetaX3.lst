C51 COMPILER V9.60.0.0   PAULOBETAX3                                                       05/11/2020 06:17:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PAULOBETAX3
OBJECT MODULE PLACED IN .\Objects\paulobetaX3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\_OwnMadeStcHeaderFiles\paulobetaX3.c OPTIMIZE(8,SPEED) BROWSE DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\paulobetaX3.lst) TABS(2) OBJECT(.\Objects\paulobetaX3.obj)

line level    source

   1          /*CHANGES
   2          >>paulo.h
   3              -The original Header file
   4          >>paulobetaX.h
   5              -elimination of 18 unncessary functions
   6                  and replaced with 7 switch statements;
   7              -burning size redution;
   8              -replacement of unnecesary variables 
   9                  with just actual values to savce space
  10              -reduction of memory leakage
  11          >>paulobetaX2.h
  12              - fixed xsegement to call xdelayms() instead of delay();
  13              - use of "x" before function names
  14                  to avoid redifination of common names
  15          >>paulobetaX3.h
  16              - use of "x" before Global varaible names
  17              - introduction  of xgetkey() function 
  18                  that does row and column check;
  19              - introduction of xtranslatekey(uchar key)
  20                  to relate the key value to digits and letters;
  21          >>paulobetaX3.h
  22          */
  23          //FUNCTION_CLAIM>>START
  24          #include <reg52.h>
  25          #include <intrins.h>
  26          #define uchar unsigned char
  27          sbit xseglock = P2^7;
  28          sbit xsegdef = P2^7;
  29          sbit xdiglock = P2^6;
  30          sbit xdigdef = P2^6;
  31          sbit xbuzzer = P2^0;
  32          uchar xsegdelay = 10;
  33          uchar xdigdelay = 10;
  34          void xseconds(uchar mm);        //[paulobetaX1.h]
  35          void xdelayms();                //[paulobetaX1.h]
  36          void xdelay(uchar xx);          //[paulobetaX1.h]
  37          void xbeep();                   //[paulobetaX1.h]
  38          void xled(uchar ld);            //[paulobetaX2.h]
  39          void xsegment(uchar xseg);      //[paulobetaX2.h]
  40          void xdigit(uchar xdig);        //[paulobetaX2.h]
  41          void xgetkey();                  //[paulobetaX3.h]
  42          void xtranslatekey(uchar key);   //[paulobetaX3.h]
  43          //FUNCTION_CLAIM>>END
  44          
  45          //FUNCTIONS_MAIN>>START
  46          
  47          void xled(uchar ld){   
  48   1              if (ld == 1){P1 = 0xfe;} //led1 = 0xfe;
  49   1              if (ld == 2){P1 = 0xfd;} //led2 = 0xfd;
  50   1              if (ld == 3){P1 = 0xfb;} //led3 = 0xfb;
  51   1              if (ld == 4){P1 = 0xf7;} //led4 = 0xf7;
  52   1              if (ld == 5){P1 = 0xef;} //led5 = 0xef;
  53   1              if (ld == 6){P1 = 0xdf;} //led6 = 0xdf;
  54   1              if (ld == 7){P1 = 0xbf;} //led7 = 0xbf;
C51 COMPILER V9.60.0.0   PAULOBETAX3                                                       05/11/2020 06:17:47 PAGE 2   

  55   1              if (ld == 8){P1 = 0x7f;} //led8 = 0x7f;
  56   1              if (ld == 0){P1 = 0xff;} //ledalloff = 0xff;
  57   1              if (ld == 00){P1 = 0xff;} //ledalloff = 0xff;
  58   1              if (ld == 11){P1 = 0x00;} //ledallon = 0x00;
  59   1              if (ld == 21){P1 = 0x0f;} //halfon1 = 0x0f;
  60   1              if (ld == 22){P1 = 0x0f;} //halfon2 = 0x0f;
  61   1      }
  62          void xsegment(uchar xseg){
  63   1          switch(xseg)
  64   1          {
  65   2            case 0:
  66   2              P0 = 0xff; //segnone = 0xff;
  67   2              break;
  68   2            case 1:
  69   2              P0 = 0xfe; //seg1 = 0xfe;
  70   2              break;
  71   2            case 2:
  72   2              P0 = 0xfd; //seg2 = 0xfd;
  73   2              break;
  74   2            case 3:
  75   2              P0 = 0xfb; //seg3 = 0xfb;
  76   2              break;
  77   2            case 4:
  78   2              P0 = 0xf7; //seg4 = 0xf7;
  79   2              break;
  80   2            case 5:
  81   2              P0 = 0xef; //seg5 = 0xef;
  82   2              break;
  83   2            case 6:
  84   2              P0 = 0xdf; //seg6 = 0xdf;
  85   2              break;
  86   2                  case 11:
  87   2                      P0 = 0x00; // segall = 0x00;
  88   2      
  89   2            default:
  90   2              xsegdef = 0;
  91   2              return;
  92   2              }
  93   1          xdelay(xsegdelay);
  94   1          xsegdef = 1;
  95   1          xsegdef = 0;
  96   1      }
  97          void xdigit(uchar xdig){
  98   1          switch(xdig)
  99   1              {  
 100   2                  case 0:
 101   2                      P0 = 0x3f; //dig0 = 0x3f;
 102   2                      break;
 103   2                  case 1:
 104   2                      P0 = 0x06; //dig1 = 0x06;
 105   2                      break;
 106   2                  case 2:
 107   2                      P0 = 0x5b; //dig2 = 0x5b;
 108   2                      break; 
 109   2                  case 3:
 110   2                      P0 = 0x4f; //dig3 = 0x4f;
 111   2                      break;
 112   2                  case 4:
 113   2                      P0 = 0x66; //dig4 = 0x66;
 114   2                      break;
 115   2                  case 5: 
 116   2                      P0 = 0x6d; //dig5 = 0x6d;
C51 COMPILER V9.60.0.0   PAULOBETAX3                                                       05/11/2020 06:17:47 PAGE 3   

 117   2                      break;
 118   2                  case 6:
 119   2                      P0 = 0x7d; //dig6 = 0x7d;
 120   2                      break;
 121   2                  case 7:
 122   2                      P0 = 0x07; //dig7 = 0x07;
 123   2                      break;
 124   2                  case 8:
 125   2                      P0 = 0x7f; //dig8 = 0x7f;
 126   2                      break;
 127   2                  case 9:
 128   2                      P0 = 0x6f; //dig9 = 0x6f;
 129   2                      break;
 130   2                  default:
 131   2                      return;
 132   2              }
 133   1          xdigdef = 1;
 134   1          xdigdef = 0;
 135   1      //    delay(xdigdelay);
 136   1      }
 137          void xseconds(uchar mm){
 138   1          uchar mmm;
 139   1        for (mmm=0;mmm<mm+1;mmm++)
 140   1        {
 141   2            xdelayms();
 142   2        }
 143   1      }
 144          void xdelayms(){
 145   1          uchar ii,jj,kk;
 146   1        _nop_();
 147   1        _nop_();
 148   1        ii = 5;
 149   1        jj = 52;
 150   1        kk = 195;
 151   1        do
 152   1        {
 153   2          do
 154   2          {
 155   3            while (--kk);
 156   3          } while (--jj);
 157   2        } while (--ii);
 158   1      }
 159          void xbeep(){
 160   1          xbuzzer = 1; // on
 161   1          xdelay(400);
 162   1          xbuzzer = 0;
 163   1      }
 164          void xdelay(uchar xx){
 165   1          uchar xz,zx;
 166   1          for (xz=0;xz<xx;xz++){
 167   2              for (zx=0;zx<120;zx++){}
 168   2          }
 169   1      }
 170          //FUNCTIONS_MAIN>>END
 171          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    374    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   PAULOBETAX3                                                       05/11/2020 06:17:47 PAGE 4   

   DATA SIZE        =      2       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
