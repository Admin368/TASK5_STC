C51 COMPILER V9.60.0.0   PAULO                                                             05/11/2020 06:04:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PAULO
OBJECT MODULE PLACED IN .\Objects\paulo.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\_OwnMadeStcHeaderFiles\paulo.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\paulo.lst) TABS(2) OBJECT(.\Objects\paulo.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #define uchar unsigned char
   4          uchar xx,k,dt,pla;
   5          sbit buzzer = P2^0;
   6          segdelay = 10;
   7          digdelay = 10;
   8          levelsdelay= 600;
   9          sbit digdef = P2^6;
  10          sbit segdef = P2^7;
  11          sbit oseg1 = P0^0;
  12          sbit oseg2 = P0^1;
  13          sbit oseg3 = P0^2;
  14          sbit oseg4 = P0^3; 
  15          sbit oseg5 = P0^4;
  16          sbit oseg6 = P0^5; 
  17          segnone = 0xff;
  18          seg1 = 0xfe;
  19          seg2 = 0xfd;
  20          seg3 = 0xfb;
  21          seg4 = 0xf7;
  22          seg5 = 0xef;
  23          seg6 = 0xdf;
  24          segall = 0x00;
  25          dig1 = 0x06;
  26          dig2 = 0x5b;
  27          dig3 = 0x4f;
  28          dig4 = 0x66;
  29          dig5 = 0x6d;
  30          dig6 = 0x7d;
  31          dig7 = 0x07;
  32          dig8 = 0x7f;
  33          dig9 = 0x6f;
  34          dig0 = 0x3f;
  35          wdig1 = 0x06;
  36          wdig2 = 0xad;
  37          wdig3 = 0x2f;
  38          wdig4 = 0x66;
  39          wdig5 = 0x6b;
  40          wdig6 = 0xeb;
  41          wdig7 = 0x0e;
  42          wdig8 = 0xef;
  43          wdig9 = 0x6f;
  44          wdig0 = 0xcf;
  45          led1 = 0xfe;
  46          led2 = 0xfd;
  47          led3 = 0xfb;
  48          led4 = 0xf7;
  49          led5 = 0xef;
  50          led6 = 0xdf;
  51          led7 = 0xbf;
  52          led8 = 0x7f;
  53          ledallon = 0x00;
  54          ledalloff = 0xff;
C51 COMPILER V9.60.0.0   PAULO                                                             05/11/2020 06:04:37 PAGE 2   

  55          halfon1 = 0x0f;
  56          halfon2 = 0xf0;
  57          level8 = 0x00;
  58          level7 = 0x01;
  59          level6 = 0x03;
  60          level5 = 0x07;
  61          level4 = 0x0f;
  62          level3 = 0x1f;
  63          level2 = 0x3f;
  64          level1 = 0x7f;
  65          level0 = 0xff;
  66          red = 0xfc;
  67          green = 0xf3;
  68          yellow = 0xcf;
  69          white = 0x3f;
  70          void levels(uchar lvl);
  71          void levelauto();
  72          void levelsauto();
  73          void led(uchar ld);
  74          void segment(uchar k);
  75          void segment0();
  76          void segment1();
  77          void segment2();
  78          void segment3();
  79          void segment4();
  80          void segment5();
  81          void segment6();
  82          void digit(uchar dt);
  83          void digit1();
  84          void digit2();
  85          void digit3();
  86          void digit4();
  87          void digit5();
  88          void digit6();
  89          void digit7();
  90          void digit8();
  91          void digit9();
  92          void digit0();
  93          void seconds(uchar m);
  94          void delayms();
  95          void delay(uchar xx);
  96          void beep();
  97          void segment(uchar k)
  98          {   
  99   1              if (k == 1){segment1();}
 100   1              if (k == 2){segment2();}
 101   1              if (k == 3){segment3();}
 102   1              if (k == 4){segment4();}
 103   1              if (k == 5){segment5();}
 104   1              if (k == 6){segment6();}
 105   1      
 106   1      }
 107          void digit(uchar dt)
 108          {   
 109   1              if (dt == 1){digit1();}
 110   1              if (dt == 2){digit2();}
 111   1              if (dt == 3){digit3();}
 112   1              if (dt == 4){digit4();}
 113   1              if (dt == 5){digit5();}
 114   1              if (dt == 6){digit6();}
 115   1              if (dt == 7){digit7();}
 116   1              if (dt == 8){digit8();}
C51 COMPILER V9.60.0.0   PAULO                                                             05/11/2020 06:04:37 PAGE 3   

 117   1              if (dt == 9){digit9();}
 118   1              if (dt == 0){digit0();}
 119   1      }
 120          void led(uchar ld)
 121          {   
 122   1              if (ld == 1){P1 = led1;}
 123   1              if (ld == 2){P1 = led2;}
 124   1              if (ld == 3){P1 = led3;}
 125   1              if (ld == 4){P1 = led4;}
 126   1              if (ld == 5){P1 = led5;}
 127   1              if (ld == 6){P1 = led6;}
 128   1              if (ld == 7){P1 = led7;}
 129   1              if (ld == 8){P1 = led8;}
 130   1              if (ld == 11){P1 = ledallon;}
 131   1              if (ld == 0){P1 = ledalloff;}
 132   1              if (ld == 00){P1 = ledalloff;}
 133   1              if (ld == 10){P1 = halfon1;}
 134   1              if (ld == 01){P1 = halfon2;}
 135   1      }
 136          void level(uchar lvl)
 137          {   
 138   1              if (lvl == 0){P1 = level0;}
 139   1              if (lvl == 1){P1 = level1;}
 140   1              if (lvl == 2){P1 = level2;}
 141   1              if (lvl == 3){P1 = level3;}
 142   1              if (lvl == 4){P1 = level4;}
 143   1              if (lvl == 5){P1 = level5;}
 144   1              if (lvl == 6){P1 = level6;}
 145   1              if (lvl == 7){P1 = level7;}
 146   1              if (lvl == 8){P1 = level8;}
 147   1      }
 148          void levelauto()
 149              {
 150   1              for(pla=0;pla<9;pla++)
 151   1                  {
 152   2                      level(pla);
 153   2                  //  seconds(1);
 154   2                      delay(levelsdelay);
 155   2                  }
 156   1          }
 157          void levelsauto(){levelauto();}
 158          void segment1(){
 159   1          P0 = seg1;
 160   1          segdef = 1;
 161   1        segdef = 0;
 162   1          delay(segdelay);
 163   1      }
 164          void segment2(){
 165   1          P0 = seg2;
 166   1          segdef = 1;
 167   1        segdef = 0;
 168   1          delay(segdelay);
 169   1      }
 170          void segment3(){
 171   1          P0 = seg3;
 172   1          segdef = 1;
 173   1        segdef = 0;
 174   1          delay(segdelay);
 175   1      }
 176          void segment4(){
 177   1          P0 = seg4;
 178   1          segdef = 1;
C51 COMPILER V9.60.0.0   PAULO                                                             05/11/2020 06:04:37 PAGE 4   

 179   1        segdef = 0;
 180   1          delay(segdelay);
 181   1      }
 182          void segment5(){
 183   1          P0 = seg5;
 184   1          segdef = 1;
 185   1        segdef = 0;
 186   1          delay(segdelay);
 187   1      }
 188          void segment6(){
 189   1          P0 = seg6;
 190   1          segdef = 1;
 191   1        segdef = 0;
 192   1          delay(segdelay);
 193   1      }
 194          
 195          void digit1(){
 196   1          P0 = dig1;
 197   1          digdef = 1;
 198   1          digdef = 0;
 199   1          delay(digdelay);
 200   1      }
 201          void digit2(){
 202   1          digdef = 1;
 203   1          P0 = dig2;
 204   1          digdef = 0;
 205   1          delay(digdelay);
 206   1      }
 207          
 208          void digit3(){
 209   1          digdef = 1;
 210   1          P0 = dig3;
 211   1          digdef = 0;
 212   1          delay(digdelay);
 213   1      }
 214          void digit4(){
 215   1          digdef = 1;
 216   1          P0 = dig4;
 217   1          digdef = 0;
 218   1          delay(digdelay);
 219   1      }
 220          void digit5(){
 221   1          digdef = 1;
 222   1          P0 = dig5;
 223   1          digdef = 0;
 224   1          delay(digdelay);
 225   1      }
 226          void digit6(){
 227   1          digdef = 1;
 228   1          P0 = dig6;
 229   1          digdef = 0;
 230   1          delay(digdelay);
 231   1      }
 232          void digit7(){
 233   1          digdef = 1;
 234   1          P0 = dig7;
 235   1          digdef = 0;
 236   1          delay(digdelay);
 237   1      }
 238          void digit8(){
 239   1          digdef = 1;
 240   1          P0 = dig8;
C51 COMPILER V9.60.0.0   PAULO                                                             05/11/2020 06:04:37 PAGE 5   

 241   1          digdef = 0;
 242   1          delay(digdelay);
 243   1      }
 244          void digit9(){
 245   1          digdef = 1;
 246   1          P0 = dig9;
 247   1          digdef = 0;
 248   1          delay(digdelay);
 249   1      }
 250          void digit0(){
 251   1          digdef = 1;
 252   1          P0 = dig0;
 253   1          digdef = 0;
 254   1          delay(digdelay);
 255   1      }
 256          void seconds(uchar mm)
 257          {
 258   1          unsigned char mmm;
 259   1        for (mmm=0;mmm<mm+1;mmm++)
 260   1        {
 261   2            delayms();
 262   2        }
 263   1      }
 264          void delayms()
 265          {
 266   1        unsigned char ii, jj, kk;
 267   1      
 268   1        _nop_();
 269   1        _nop_();
 270   1        ii = 5;
 271   1        jj = 52;
 272   1        kk = 195;
 273   1        do
 274   1        {
 275   2          do
 276   2          {
 277   3            while (--kk);
 278   3          } while (--jj);
 279   2        } while (--ii);
 280   1      }
 281          void beep(){
 282   1          buzzer = 1; // on
 283   1          delay(400);
 284   1          buzzer = 0;
 285   1      }
 286          void delay(uchar xx){
 287   1          unsigned char zx,xz;
 288   1          for (xz=0;xz<xx;xz++){
 289   2              for (zx=0;zx<120;zx++){}
 290   2          }
 291   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    653    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =    116       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   PAULO                                                             05/11/2020 06:04:37 PAGE 6   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
